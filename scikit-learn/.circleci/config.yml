version: 2.1

jobs:
  doc-min-dependencies:
    docker:
      - image: circleci/python:3.7.7-buster
    environment:
      - OMP_NUM_THREADS: 2
      - MKL_NUM_THREADS: 2
      - CONDA_ENV_NAME: testenv
      - PYTHON_VERSION: 3.7
      - NUMPY_VERSION: 'min'
      - SCIPY_VERSION: 'min'
      - MATPLOTLIB_VERSION: 'min'
      - CYTHON_VERSION: 'min'
      - SCIKIT_IMAGE_VERSION: 'min'
      - SPHINX_VERSION: 'min'
      - PANDAS_VERSION: 'min'
      - SPHINX_GALLERY_VERSION: 'min'
      - NUMPYDOC_VERSION: 'min'
      - SPHINX_PROMPT_VERSION: 'min'
      - SPHINXEXT_OPENGRAPH_VERSION: 'min'
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - restore_cache:
          key: v1-datasets-{{ .Branch }}
      - restore_cache:
          keys:
            - doc-min-deps-ccache-{{ .Branch }}
            - doc-min-deps-ccache
      - run: ./build_tools/circle/build_doc.sh
      - save_cache:
          key: doc-min-deps-ccache-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ~/.ccache
            - ~/.cache/pip
      - save_cache:
          key: v1-datasets-{{ .Branch }}
          paths:
            - ~/scikit_learn_data
      - store_artifacts:
          path: doc/_build/html/stable
          destination: doc
      - store_artifacts:
          path: ~/log.txt
          destination: log.txt

  doc:
    docker:
      - image: circleci/python:3.7.7-buster
    environment:
      - OMP_NUM_THREADS: 2
      - MKL_NUM_THREADS: 2
      - CONDA_ENV_NAME: testenv
      - PYTHON_VERSION: '3.9'
      - NUMPY_VERSION: 'latest'
      - SCIPY_VERSION: 'latest'
      - MATPLOTLIB_VERSION: 'latest'
      - CYTHON_VERSION: 'latest'
      - SCIKIT_IMAGE_VERSION: 'latest'
      # Bump the sphinx version from time to time. Avoid latest sphinx version
      # that tends to break things slightly too often
      - SPHINX_VERSION: 4.2.0
      - PANDAS_VERSION: 'latest'
      - SPHINX_GALLERY_VERSION: 'latest'
      - NUMPYDOC_VERSION: 'latest'
      - SPHINX_PROMPT_VERSION: 'latest'
      - SPHINXEXT_OPENGRAPH_VERSION: 'latest'
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - restore_cache:
          key: v1-datasets-{{ .Branch }}
      - restore_cache:
          keys:
            - doc-ccache-{{ .Branch }}
            - doc-ccache
      - run: ./build_tools/circle/build_doc.sh
      - save_cache:
          key: doc-ccache-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ~/.ccache
            - ~/.cache/pip
      - save_cache:
          key: v1-datasets-{{ .Branch }}
          paths:
            - ~/scikit_learn_data
      - store_artifacts:
          path: doc/_build/html/stable
          destination: doc
      - store_artifacts:
          path: ~/log.txt
          destination: log.txt
      # Persists generated documentation so that it can be attached and deployed
      # in the 'deploy' step.
      - persist_to_workspace:
          root: doc/_build/html
          paths: .

  lint:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - run:
          name: dependencies
          command: sudo pip install flake8
      - run:
          name: linting
          command: ./build_tools/circle/linting.sh

  linux-arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    environment:
      # Use the latest supported version of python
      - PYTHON_VERSION: '3.9'
      - OMP_NUM_THREADS: 2
      - OPENBLAS_NUM_THREADS: 2
      - NUMPY_VERSION: 'latest'
      - SCIPY_VERSION: 'latest'
      - CYTHON_VERSION: 'latest'
      - JOBLIB_VERSION: 'latest'
      - THREADPOOLCTL_VERSION: 'latest'
      - PYTEST_VERSION: 'latest'
      - PYTEST_XDIST_VERSION: 'latest'
      - TEST_DOCSTRINGS: 'true'
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      - restore_cache:
          key: linux-arm64-{{ .Branch }}
      - run: ./build_tools/circle/build_test_arm.sh
      - save_cache:
          key: linux-arm64-{{ .Branch }}
          paths:
            - ~/.cache/ccache
            - ~/.cache/pip
            - ~/scikit_learn_data
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: ./build_tools/circle/checkout_merge_commit.sh
      # Attach documentation generated in the 'doc' step so that it can be
      # deployed.
      - attach_workspace:
          at: doc/_build/html
      - run: ls -ltrh doc/_build/html/stable
      - deploy:
          command: |
            if [[ "${CIRCLE_BRANCH}" =~ ^main$|^[0-9]+\.[0-9]+\.X$ ]]; then
              bash build_tools/circle/push_doc.sh doc/_build/html/stable
            fi

workflows:
  version: 2
  build-doc-and-deploy:
    jobs:
      - lint
      - doc:
          requires:
            - lint
      - doc-min-dependencies:
          requires:
            - lint
      - deploy:
          requires:
            - doc
  linux-arm64:
    jobs:
      - linux-arm64
